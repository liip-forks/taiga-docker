---
version: "3.5"

x-taiga-environment: &taiga-environment
  TAIGA_SITES_SCHEME: "${TAIGA_SCHEME:-http}"
  TAIGA_SITES_DOMAIN: "${TAIGA_DOMAIN:-localhost:9000}"
  TAIGA_SUBPATH: "${TAIGA_SUBPATH}"
  PUBLIC_REGISTER_ENABLED: "${PUBLIC_REGISTER_ENABLED:-False}"

x-db-environment: &db-environment # Database settings
  POSTGRES_DB: taiga
  POSTGRES_USER: taiga
  POSTGRES_PASSWORD: "${TAIGA_DB_PASSWORD}"

x-back-environment: &back-environment
  <<: *db-environment
  <<: *taiga-environment
  # Check https://github.com/taigaio/taiga-back/blob/master/docker/config.py
  POSTGRES_HOST: taiga-db
  TAIGA_SECRET_KEY: "${TAIGA_SECRET_KEY}"
  ENABLE_TELEMETRY: "${TAIGA_ENABLE_TELEMETRY:-True}"

x-front-environment: &front-environment
  <<: *taiga-environment

x-protected-environment: &protected-environment
  <<: *taiga-environment # for TAIGA_SUBPATH
  SECRET_KEY: "${TAIGA_SECRET_KEY}"

x-environment: &default-back-environment
  # Email settings. Uncomment following lines and configure your SMTP server
  # EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
  # DEFAULT_FROM_EMAIL: "no-reply@example.com"
  # EMAIL_USE_TLS: "False"
  # EMAIL_USE_SSL: "False"
  # EMAIL_HOST: "smtp.host.example.com"
  # EMAIL_PORT: 587
  # EMAIL_HOST_USER: "user"
  # EMAIL_HOST_PASSWORD: "password"
  # Rabbitmq settings
  # Should be the same as in taiga-async-rabbitmq and taiga-events-rabbitmq
  RABBITMQ_USER: taiga
  RABBITMQ_PASS: taiga

x-volumes: &default-back-volumes
  - taiga-static-data:/taiga-back/static
  - taiga-media-data:/taiga-back/media
  - ./taiga-back/env-setting-entrypoint.sh:/usr/local/bin/env-setting-entrypoint.sh
  # - ./config.py:/taiga-back/settings/config.py

services:
  taiga-db:
    image: postgres:12.3
    environment:
      <<: *db-environment
    volumes:
      - taiga-db-data:/var/lib/postgresql/data
    networks:
      - taiga

  taiga-back:
    image: taigaio/taiga-back:latest
    environment:
      <<: *back-environment
    volumes: *default-back-volumes
    entrypoint: "/usr/local/bin/env-setting-entrypoint.sh"
    networks:
      - taiga
    depends_on:
      - taiga-db
      - taiga-events-rabbitmq
      - taiga-async-rabbitmq

  taiga-async:
    image: taigaio/taiga-back:latest
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment:
      <<: *back-environment
    volumes: *default-back-volumes
    networks:
      - taiga
    depends_on:
      - taiga-db
      - taiga-back
      - taiga-async-rabbitmq

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_ERLANG_COOKIE: secret-erlang-cookie
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taiga
      RABBITMQ_DEFAULT_VHOST: taiga
    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga

  taiga-front:
    image: taigaio/taiga-front:latest
    environment:
      <<: *front-environment
    networks:
      - taiga
    volumes:
      - ./taiga-front/docker-entrypoint.sh:/docker-entrypoint.sh
      - ./taiga-front/docker-entrypoint.d/00-set-taiga-env.envsh:/docker-entrypoint.d/00-set-taiga-env.envsh
    # volumes:
    #   - ./conf.json:/usr/share/nginx/html/conf.json

  taiga-events:
    image: taigaio/taiga-events:latest
    environment:
      <<: *back-environment
    networks:
      - taiga
    depends_on:
      - taiga-events-rabbitmq

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_ERLANG_COOKIE: secret-erlang-cookie
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taiga
      RABBITMQ_DEFAULT_VHOST: taiga
    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga

  taiga-protected:
    image: taigaio/taiga-protected:latest
    environment:
      <<: *protected-environment
    networks:
      - taiga

  taiga-gateway:
    image: nginx:1.19-alpine
    ports:
      - "${TAIGA_GATEWAY_PORT:-9000}:80"
    volumes:
      - ./taiga-gateway/taiga.conf:/etc/nginx/conf.d/default.conf
      - taiga-static-data:/taiga/static
      - taiga-media-data:/taiga/media
    networks:
      - taiga
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events

volumes:
  taiga-static-data:
  taiga-media-data:
  taiga-db-data:
  taiga-async-rabbitmq-data:
  taiga-events-rabbitmq-data:

networks:
  taiga:
